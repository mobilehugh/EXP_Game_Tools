
    def Absorption():
    
        DataSet = {
            "number": "1",
            "name": "Absorption",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Absorption ",
            "link": "#1-absorption"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Absorption."

        return f"{number}. {name}: " + desc
        

    def AlternateBanishment():
    
        DataSet = {
            "number": "2",
            "name": "Alternate Banishment",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Alternate Banishment ",
            "link": "#2-alternate-banishment"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Alternate Banishment."

        return f"{number}. {name}: " + desc
        

    def AnimalAttachment():
    
        DataSet = {
            "number": "3",
            "name": "Animal Attachment",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Animal Attachment ",
            "link": "#3-animal-attachment"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Animal Attachment."

        return f"{number}. {name}: " + desc
        

    def Calculations():
    
        DataSet = {
            "number": "4",
            "name": "Calculations",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Calculations ",
            "link": "#4-calculations"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Calculations."

        return f"{number}. {name}: " + desc
        

    def Communicate():
    
        DataSet = {
            "number": "5",
            "name": "Communicate",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Communicate ",
            "link": "#5-communicate"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Communicate."

        return f"{number}. {name}: " + desc
        

    def Cryokinesis():
    
        DataSet = {
            "number": "6",
            "name": "Cryokinesis",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Cryokinesis ",
            "link": "#6-cryokinesis"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Cryokinesis."

        return f"{number}. {name}: " + desc
        

    def DeathFieldGeneration():
    
        DataSet = {
            "number": "7",
            "name": "Death Field Generation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Death Field Generation ",
            "link": "#7-death-field-generation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Death Field Generation."

        return f"{number}. {name}: " + desc
        

    def DensityControl():
    
        DataSet = {
            "number": "8",
            "name": "Density Control",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Density Control ",
            "link": "#8-density-control"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Density Control."

        return f"{number}. {name}: " + desc
        

    def Detections():
    
        DataSet = {
            "number": "9",
            "name": "Detections",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Detections ",
            "link": "#9-detections"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Detections."

        return f"{number}. {name}: " + desc
        

    def DirectionalSense():
    
        DataSet = {
            "number": "10",
            "name": "Directional Sense",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Directional Sense ",
            "link": "#10-directional-sense"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Directional Sense."

        return f"{number}. {name}: " + desc
        

    def Empathy():
    
        DataSet = {
            "number": "11",
            "name": "Empathy",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Empathy ",
            "link": "#11-empathy"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Empathy."

        return f"{number}. {name}: " + desc
        

    def EnergyAttraction():
    
        DataSet = {
            "number": "12",
            "name": "Energy Attraction",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Energy Attraction ",
            "link": "#12-energy-attraction"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Energy Attraction."

        return f"{number}. {name}: " + desc
        

    def EpilepticProjection():
    
        DataSet = {
            "number": "13",
            "name": "Epileptic Projection",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Epileptic Projection ",
            "link": "#13-epileptic-projection"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Epileptic Projection."

        return f"{number}. {name}: " + desc
        

    def ExtraSensoryPerception():
    
        DataSet = {
            "number": "14",
            "name": "Extra Sensory Perception",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Extra Sensory Perception ",
            "link": "#14-extra-sensory-perception"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Extra Sensory Perception."

        return f"{number}. {name}: " + desc
        

    def ForceFieldGeneration():
    
        DataSet = {
            "number": "15",
            "name": "Force Field Generation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Force Field Generation ",
            "link": "#15-force-field-generation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Force Field Generation."

        return f"{number}. {name}: " + desc
        

    def Gyrokinesis():
    
        DataSet = {
            "number": "16",
            "name": "Gyrokinesis",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Gyrokinesis ",
            "link": "#16-gyrokinesis"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Gyrokinesis."

        return f"{number}. {name}: " + desc
        

    def HeightenedBrainTalent():
    
        DataSet = {
            "number": "17",
            "name": "Heightened Brain Talent",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Heightened Brain Talent ",
            "link": "#17-heightened-brain-talent"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Heightened Brain Talent."

        return f"{number}. {name}: " + desc
        

    def HostilityFieldGeneration():
    
        DataSet = {
            "number": "18",
            "name": "Hostility Field Generation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Hostility Field Generation ",
            "link": "#18-hostility-field-generation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Hostility Field Generation."

        return f"{number}. {name}: " + desc
        

    def IllusionGeneration():
    
        DataSet = {
            "number": "19",
            "name": "Illusion Generation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Illusion Generation ",
            "link": "#19-illusion-generation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Illusion Generation."

        return f"{number}. {name}: " + desc
        

    def InformationEradication():
    
        DataSet = {
            "number": "20",
            "name": "Information Eradication",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Information Eradication ",
            "link": "#20-information-eradication"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Information Eradication."

        return f"{number}. {name}: " + desc
        

    def Intuition():
    
        DataSet = {
            "number": "21",
            "name": "Intuition",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Intuition ",
            "link": "#21-intuition"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Intuition."

        return f"{number}. {name}: " + desc
        

    def KnowledgeTransmission():
    
        DataSet = {
            "number": "22",
            "name": "Knowledge Transmission",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Knowledge Transmission ",
            "link": "#22-knowledge-transmission"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Knowledge Transmission."

        return f"{number}. {name}: " + desc
        

    def Levitation():
    
        DataSet = {
            "number": "23",
            "name": "Levitation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Levitation ",
            "link": "#23-levitation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Levitation."

        return f"{number}. {name}: " + desc
        

    def LifeLeech():
    
        DataSet = {
            "number": "24",
            "name": "Life Leech",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Life Leech ",
            "link": "#24-life-leech"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Life Leech."

        return f"{number}. {name}: " + desc
        

    def LightWaveManipulation():
    
        DataSet = {
            "number": "25",
            "name": "Light Wave Manipulation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Light Wave Manipulation ",
            "link": "#25-light-wave-manipulation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Light Wave Manipulation."

        return f"{number}. {name}: " + desc
        

    def MagneticControl():
    
        DataSet = {
            "number": "26",
            "name": "Magnetic Control",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Magnetic Control ",
            "link": "#26-magnetic-control"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Magnetic Control."

        return f"{number}. {name}: " + desc
        

    def MassMind():
    
        DataSet = {
            "number": "27",
            "name": "Mass Mind",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Mass Mind ",
            "link": "#27-mass-mind"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Mass Mind."

        return f"{number}. {name}: " + desc
        

    def MechanicalSense():
    
        DataSet = {
            "number": "28",
            "name": "Mechanical Sense",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Mechanical Sense ",
            "link": "#28-mechanical-sense"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Mechanical Sense."

        return f"{number}. {name}: " + desc
        

    def MentalBlast():
    
        DataSet = {
            "number": "29",
            "name": "Mental Blast",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Mental Blast ",
            "link": "#29-mental-blast"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Mental Blast."

        return f"{number}. {name}: " + desc
        

    def MentalControl():
    
        DataSet = {
            "number": "30",
            "name": "Mental Control",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Mental Control ",
            "link": "#30-mental-control"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Mental Control."

        return f"{number}. {name}: " + desc
        

    def MentalControlOverPhysicalState():
    
        DataSet = {
            "number": "31",
            "name": "Mental Control Over Physical State",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Mental Control Over Physical State ",
            "link": "#31-mental-control-over-physical-state"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Mental Control Over Physical State."

        return f"{number}. {name}: " + desc
        

    def MentalDefencelessness():
    
        DataSet = {
            "number": "32",
            "name": "Mental Defencelessness",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Mental Defencelessness ",
            "link": "#32-mental-defencelessness"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Mental Defencelessness."

        return f"{number}. {name}: " + desc
        

    def MolecularDistruption():
    
        DataSet = {
            "number": "33",
            "name": "Molecular Distruption",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Molecular Distruption ",
            "link": "#33-molecular-distruption"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Molecular Distruption."

        return f"{number}. {name}: " + desc
        

    def MolecularExamination():
    
        DataSet = {
            "number": "34",
            "name": "Molecular Examination",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Molecular Examination ",
            "link": "#34-molecular-examination"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Molecular Examination."

        return f"{number}. {name}: " + desc
        

    def MolecularPhaseTransformation():
    
        DataSet = {
            "number": "35",
            "name": "Molecular Phase Transformation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Molecular Phase Transformation ",
            "link": "#35-molecular-phase-transformation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Molecular Phase Transformation."

        return f"{number}. {name}: " + desc
        

    def MolecularPhaseTransmutation():
    
        DataSet = {
            "number": "36",
            "name": "Molecular Phase Transmutation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Molecular Phase Transmutation ",
            "link": "#36-molecular-phase-transmutation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Molecular Phase Transmutation."

        return f"{number}. {name}: " + desc
        

    def MuscleManipulation():
    
        DataSet = {
            "number": "37",
            "name": "Muscle Manipulation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Muscle Manipulation ",
            "link": "#37-muscle-manipulation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Muscle Manipulation."

        return f"{number}. {name}: " + desc
        

    def Neuronegation():
    
        DataSet = {
            "number": "38",
            "name": "Neuronegation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Neuronegation ",
            "link": "#38-neuronegation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Neuronegation."

        return f"{number}. {name}: " + desc
        

    def Phase():
    
        DataSet = {
            "number": "39",
            "name": "Phase",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Phase ",
            "link": "#39-phase"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Phase."

        return f"{number}. {name}: " + desc
        

    def PlanalHideaway():
    
        DataSet = {
            "number": "40",
            "name": "Planal Hideaway",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Planal Hideaway ",
            "link": "#40-planal-hideaway"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Planal Hideaway."

        return f"{number}. {name}: " + desc
        

    def PlanalHoldaway():
    
        DataSet = {
            "number": "41",
            "name": "Planal Holdaway",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Planal Holdaway ",
            "link": "#41-planal-holdaway"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Planal Holdaway."

        return f"{number}. {name}: " + desc
        

    def PolarDisruption():
    
        DataSet = {
            "number": "42",
            "name": "Polar Disruption",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Polar Disruption ",
            "link": "#42-polar-disruption"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Polar Disruption."

        return f"{number}. {name}: " + desc
        

    def PowerDrain():
    
        DataSet = {
            "number": "43",
            "name": "Power Drain",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Power Drain ",
            "link": "#43-power-drain"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Power Drain."

        return f"{number}. {name}: " + desc
        

    def Precognition():
    
        DataSet = {
            "number": "44",
            "name": "Precognition",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Precognition ",
            "link": "#44-precognition"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Precognition."

        return f"{number}. {name}: " + desc
        

    def ProjectedSense():
    
        DataSet = {
            "number": "45",
            "name": "Projected Sense",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Projected Sense ",
            "link": "#45-projected-sense"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Projected Sense."

        return f"{number}. {name}: " + desc
        

    def ProtectionShell():
    
        DataSet = {
            "number": "46",
            "name": "Protection Shell",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Protection Shell ",
            "link": "#46-protection-shell"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Protection Shell."

        return f"{number}. {name}: " + desc
        

    def PsionicDefence():
    
        DataSet = {
            "number": "47",
            "name": "Psionic Defence",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Psionic Defence ",
            "link": "#47-psionic-defence"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Psionic Defence."

        return f"{number}. {name}: " + desc
        

    def Purify():
    
        DataSet = {
            "number": "48",
            "name": "Purify",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Purify ",
            "link": "#48-purify"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Purify."

        return f"{number}. {name}: " + desc
        

    def Pyrokinesis():
    
        DataSet = {
            "number": "49",
            "name": "Pyrokinesis",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Pyrokinesis ",
            "link": "#49-pyrokinesis"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Pyrokinesis."

        return f"{number}. {name}: " + desc
        

    def RepulsionFieldGeneration():
    
        DataSet = {
            "number": "50",
            "name": "Repulsion Field Generation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Repulsion Field Generation ",
            "link": "#50-repulsion-field-generation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Repulsion Field Generation."

        return f"{number}. {name}: " + desc
        

    def Restoration():
    
        DataSet = {
            "number": "51",
            "name": "Restoration",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Restoration ",
            "link": "#51-restoration"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Restoration."

        return f"{number}. {name}: " + desc
        

    def SensoryDeprivation():
    
        DataSet = {
            "number": "52",
            "name": "Sensory Deprivation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Sensory Deprivation ",
            "link": "#52-sensory-deprivation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Sensory Deprivation."

        return f"{number}. {name}: " + desc
        

    def SociabilityFieldGeneration():
    
        DataSet = {
            "number": "53",
            "name": "Sociability Field Generation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Sociability Field Generation ",
            "link": "#53-sociability-field-generation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Sociability Field Generation."

        return f"{number}. {name}: " + desc
        

    def Sonar():
    
        DataSet = {
            "number": "54",
            "name": "Sonar",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Sonar ",
            "link": "#54-sonar"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Sonar."

        return f"{number}. {name}: " + desc
        

    def SonicAttack():
    
        DataSet = {
            "number": "55",
            "name": "Sonic Attack",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Sonic Attack ",
            "link": "#55-sonic-attack"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Sonic Attack."

        return f"{number}. {name}: " + desc
        

    def SonicReproduction():
    
        DataSet = {
            "number": "56",
            "name": "Sonic Reproduction",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Sonic Reproduction ",
            "link": "#56-sonic-reproduction"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Sonic Reproduction."

        return f"{number}. {name}: " + desc
        

    def Suggestion():
    
        DataSet = {
            "number": "57",
            "name": "Suggestion",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Suggestion ",
            "link": "#57-suggestion"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Suggestion."

        return f"{number}. {name}: " + desc
        

    def Telekinesis():
    
        DataSet = {
            "number": "58",
            "name": "Telekinesis",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Telekinesis ",
            "link": "#58-telekinesis"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Telekinesis."

        return f"{number}. {name}: " + desc
        

    def TelekineticArm():
    
        DataSet = {
            "number": "59",
            "name": "Telekinetic Arm",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Telekinetic Arm ",
            "link": "#59-telekinetic-arm"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Telekinetic Arm."

        return f"{number}. {name}: " + desc
        

    def TelekineticFlight():
    
        DataSet = {
            "number": "60",
            "name": "Telekinetic Flight",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Telekinetic Flight ",
            "link": "#60-telekinetic-flight"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Telekinetic Flight."

        return f"{number}. {name}: " + desc
        

    def Telempathy():
    
        DataSet = {
            "number": "61",
            "name": "Telempathy",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Telempathy ",
            "link": "#61-telempathy"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Telempathy."

        return f"{number}. {name}: " + desc
        

    def Teleport():
    
        DataSet = {
            "number": "62",
            "name": "Teleport",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Teleport ",
            "link": "#62-teleport"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Teleport."

        return f"{number}. {name}: " + desc
        

    def ThoughtImitation():
    
        DataSet = {
            "number": "63",
            "name": "Thought Imitation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Thought Imitation ",
            "link": "#63-thought-imitation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Thought Imitation."

        return f"{number}. {name}: " + desc
        

    def TimeStop():
    
        DataSet = {
            "number": "64",
            "name": "Time Stop",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Time Stop ",
            "link": "#64-time-stop"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Time Stop."

        return f"{number}. {name}: " + desc
        

    def TimeTell():
    
        DataSet = {
            "number": "65",
            "name": "Time Tell",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Time Tell ",
            "link": "#65-time-tell"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Time Tell."

        return f"{number}. {name}: " + desc
        

    def TotalRecuperation():
    
        DataSet = {
            "number": "66",
            "name": "Total Recuperation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Total Recuperation ",
            "link": "#66-total-recuperation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Total Recuperation."

        return f"{number}. {name}: " + desc
        

    def Ventriloquism():
    
        DataSet = {
            "number": "67",
            "name": "Ventriloquism",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Ventriloquism ",
            "link": "#67-ventriloquism"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Ventriloquism."

        return f"{number}. {name}: " + desc
        

    def WeaponsDischarging():
    
        DataSet = {
            "number": "68",
            "name": "Weapons Discharging",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Weapons Discharging ",
            "link": "#68-weapons-discharging"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Weapons Discharging."

        return f"{number}. {name}: " + desc
        

    def WeatherTell():
    
        DataSet = {
            "number": "69",
            "name": "Weather Tell",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Weather Tell ",
            "link": "#69-weather-tell"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Weather Tell."

        return f"{number}. {name}: " + desc
        

    def Absorption():
    
        DataSet = {
            "number": "1",
            "name": "Absorption",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Absorption ",
            "link": "#1-absorption"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Absorption."

        return f"{number}. {name}: " + desc
        

    def AlternateBanishment():
    
        DataSet = {
            "number": "2",
            "name": "Alternate Banishment",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Alternate Banishment ",
            "link": "#2-alternate-banishment"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Alternate Banishment."

        return f"{number}. {name}: " + desc
        

    def AnimalAttachment():
    
        DataSet = {
            "number": "3",
            "name": "Animal Attachment",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Animal Attachment ",
            "link": "#3-animal-attachment"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Animal Attachment."

        return f"{number}. {name}: " + desc
        

    def Calculations():
    
        DataSet = {
            "number": "4",
            "name": "Calculations",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Calculations ",
            "link": "#4-calculations"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Calculations."

        return f"{number}. {name}: " + desc
        

    def Communicate():
    
        DataSet = {
            "number": "5",
            "name": "Communicate",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Communicate ",
            "link": "#5-communicate"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Communicate."

        return f"{number}. {name}: " + desc
        

    def Cryokinesis():
    
        DataSet = {
            "number": "6",
            "name": "Cryokinesis",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Cryokinesis ",
            "link": "#6-cryokinesis"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Cryokinesis."

        return f"{number}. {name}: " + desc
        

    def DeathFieldGeneration():
    
        DataSet = {
            "number": "7",
            "name": "Death Field Generation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Death Field Generation ",
            "link": "#7-death-field-generation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Death Field Generation."

        return f"{number}. {name}: " + desc
        

    def DensityControl():
    
        DataSet = {
            "number": "8",
            "name": "Density Control",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Density Control ",
            "link": "#8-density-control"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Density Control."

        return f"{number}. {name}: " + desc
        

    def Detections():
    
        DataSet = {
            "number": "9",
            "name": "Detections",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Detections ",
            "link": "#9-detections"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Detections."

        return f"{number}. {name}: " + desc
        

    def DirectionalSense():
    
        DataSet = {
            "number": "10",
            "name": "Directional Sense",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Directional Sense ",
            "link": "#10-directional-sense"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Directional Sense."

        return f"{number}. {name}: " + desc
        

    def Empathy():
    
        DataSet = {
            "number": "11",
            "name": "Empathy",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Empathy ",
            "link": "#11-empathy"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Empathy."

        return f"{number}. {name}: " + desc
        

    def EnergyAttraction():
    
        DataSet = {
            "number": "12",
            "name": "Energy Attraction",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Energy Attraction ",
            "link": "#12-energy-attraction"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Energy Attraction."

        return f"{number}. {name}: " + desc
        

    def EpilepticProjection():
    
        DataSet = {
            "number": "13",
            "name": "Epileptic Projection",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Epileptic Projection ",
            "link": "#13-epileptic-projection"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Epileptic Projection."

        return f"{number}. {name}: " + desc
        

    def ExtraSensoryPerception():
    
        DataSet = {
            "number": "14",
            "name": "Extra Sensory Perception",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Extra Sensory Perception ",
            "link": "#14-extra-sensory-perception"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Extra Sensory Perception."

        return f"{number}. {name}: " + desc
        

    def ForceFieldGeneration():
    
        DataSet = {
            "number": "15",
            "name": "Force Field Generation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Force Field Generation ",
            "link": "#15-force-field-generation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Force Field Generation."

        return f"{number}. {name}: " + desc
        

    def Gyrokinesis():
    
        DataSet = {
            "number": "16",
            "name": "Gyrokinesis",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Gyrokinesis ",
            "link": "#16-gyrokinesis"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Gyrokinesis."

        return f"{number}. {name}: " + desc
        

    def HeightenedBrainTalent():
    
        DataSet = {
            "number": "17",
            "name": "Heightened Brain Talent",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Heightened Brain Talent ",
            "link": "#17-heightened-brain-talent"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Heightened Brain Talent."

        return f"{number}. {name}: " + desc
        

    def HostilityFieldGeneration():
    
        DataSet = {
            "number": "18",
            "name": "Hostility Field Generation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Hostility Field Generation ",
            "link": "#18-hostility-field-generation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Hostility Field Generation."

        return f"{number}. {name}: " + desc
        

    def IllusionGeneration():
    
        DataSet = {
            "number": "19",
            "name": "Illusion Generation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Illusion Generation ",
            "link": "#19-illusion-generation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Illusion Generation."

        return f"{number}. {name}: " + desc
        

    def InformationEradication():
    
        DataSet = {
            "number": "20",
            "name": "Information Eradication",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Information Eradication ",
            "link": "#20-information-eradication"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Information Eradication."

        return f"{number}. {name}: " + desc
        

    def Intuition():
    
        DataSet = {
            "number": "21",
            "name": "Intuition",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Intuition ",
            "link": "#21-intuition"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Intuition."

        return f"{number}. {name}: " + desc
        

    def KnowledgeTransmission():
    
        DataSet = {
            "number": "22",
            "name": "Knowledge Transmission",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Knowledge Transmission ",
            "link": "#22-knowledge-transmission"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Knowledge Transmission."

        return f"{number}. {name}: " + desc
        

    def Levitation():
    
        DataSet = {
            "number": "23",
            "name": "Levitation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Levitation ",
            "link": "#23-levitation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Levitation."

        return f"{number}. {name}: " + desc
        

    def LifeLeech():
    
        DataSet = {
            "number": "24",
            "name": "Life Leech",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Life Leech ",
            "link": "#24-life-leech"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Life Leech."

        return f"{number}. {name}: " + desc
        

    def LightWaveManipulation():
    
        DataSet = {
            "number": "25",
            "name": "Light Wave Manipulation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Light Wave Manipulation ",
            "link": "#25-light-wave-manipulation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Light Wave Manipulation."

        return f"{number}. {name}: " + desc
        

    def MagneticControl():
    
        DataSet = {
            "number": "26",
            "name": "Magnetic Control",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Magnetic Control ",
            "link": "#26-magnetic-control"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Magnetic Control."

        return f"{number}. {name}: " + desc
        

    def MassMind():
    
        DataSet = {
            "number": "27",
            "name": "Mass Mind",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Mass Mind ",
            "link": "#27-mass-mind"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Mass Mind."

        return f"{number}. {name}: " + desc
        

    def MechanicalSense():
    
        DataSet = {
            "number": "28",
            "name": "Mechanical Sense",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Mechanical Sense ",
            "link": "#28-mechanical-sense"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Mechanical Sense."

        return f"{number}. {name}: " + desc
        

    def MentalBlast():
    
        DataSet = {
            "number": "29",
            "name": "Mental Blast",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Mental Blast ",
            "link": "#29-mental-blast"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Mental Blast."

        return f"{number}. {name}: " + desc
        

    def MentalControl():
    
        DataSet = {
            "number": "30",
            "name": "Mental Control",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Mental Control ",
            "link": "#30-mental-control"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Mental Control."

        return f"{number}. {name}: " + desc
        

    def MentalControlOverPhysicalState():
    
        DataSet = {
            "number": "31",
            "name": "Mental Control Over Physical State",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Mental Control Over Physical State ",
            "link": "#31-mental-control-over-physical-state"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Mental Control Over Physical State."

        return f"{number}. {name}: " + desc
        

    def MentalDefencelessness():
    
        DataSet = {
            "number": "32",
            "name": "Mental Defencelessness",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Mental Defencelessness ",
            "link": "#32-mental-defencelessness"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Mental Defencelessness."

        return f"{number}. {name}: " + desc
        

    def MolecularDistruption():
    
        DataSet = {
            "number": "33",
            "name": "Molecular Distruption",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Molecular Distruption ",
            "link": "#33-molecular-distruption"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Molecular Distruption."

        return f"{number}. {name}: " + desc
        

    def MolecularExamination():
    
        DataSet = {
            "number": "34",
            "name": "Molecular Examination",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Molecular Examination ",
            "link": "#34-molecular-examination"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Molecular Examination."

        return f"{number}. {name}: " + desc
        

    def MolecularPhaseTransformation():
    
        DataSet = {
            "number": "35",
            "name": "Molecular Phase Transformation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Molecular Phase Transformation ",
            "link": "#35-molecular-phase-transformation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Molecular Phase Transformation."

        return f"{number}. {name}: " + desc
        

    def MolecularPhaseTransmutation():
    
        DataSet = {
            "number": "36",
            "name": "Molecular Phase Transmutation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Molecular Phase Transmutation ",
            "link": "#36-molecular-phase-transmutation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Molecular Phase Transmutation."

        return f"{number}. {name}: " + desc
        

    def MuscleManipulation():
    
        DataSet = {
            "number": "37",
            "name": "Muscle Manipulation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Muscle Manipulation ",
            "link": "#37-muscle-manipulation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Muscle Manipulation."

        return f"{number}. {name}: " + desc
        

    def Neuronegation():
    
        DataSet = {
            "number": "38",
            "name": "Neuronegation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Neuronegation ",
            "link": "#38-neuronegation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Neuronegation."

        return f"{number}. {name}: " + desc
        

    def Phase():
    
        DataSet = {
            "number": "39",
            "name": "Phase",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Phase ",
            "link": "#39-phase"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Phase."

        return f"{number}. {name}: " + desc
        

    def PlanalHideaway():
    
        DataSet = {
            "number": "40",
            "name": "Planal Hideaway",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Planal Hideaway ",
            "link": "#40-planal-hideaway"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Planal Hideaway."

        return f"{number}. {name}: " + desc
        

    def PlanalHoldaway():
    
        DataSet = {
            "number": "41",
            "name": "Planal Holdaway",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Planal Holdaway ",
            "link": "#41-planal-holdaway"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Planal Holdaway."

        return f"{number}. {name}: " + desc
        

    def PolarDisruption():
    
        DataSet = {
            "number": "42",
            "name": "Polar Disruption",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Polar Disruption ",
            "link": "#42-polar-disruption"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Polar Disruption."

        return f"{number}. {name}: " + desc
        

    def PowerDrain():
    
        DataSet = {
            "number": "43",
            "name": "Power Drain",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Power Drain ",
            "link": "#43-power-drain"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Power Drain."

        return f"{number}. {name}: " + desc
        

    def Precognition():
    
        DataSet = {
            "number": "44",
            "name": "Precognition",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Precognition ",
            "link": "#44-precognition"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Precognition."

        return f"{number}. {name}: " + desc
        

    def ProjectedSense():
    
        DataSet = {
            "number": "45",
            "name": "Projected Sense",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Projected Sense ",
            "link": "#45-projected-sense"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Projected Sense."

        return f"{number}. {name}: " + desc
        

    def ProtectionShell():
    
        DataSet = {
            "number": "46",
            "name": "Protection Shell",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Protection Shell ",
            "link": "#46-protection-shell"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Protection Shell."

        return f"{number}. {name}: " + desc
        

    def PsionicDefence():
    
        DataSet = {
            "number": "47",
            "name": "Psionic Defence",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Psionic Defence ",
            "link": "#47-psionic-defence"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Psionic Defence."

        return f"{number}. {name}: " + desc
        

    def Purify():
    
        DataSet = {
            "number": "48",
            "name": "Purify",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Purify ",
            "link": "#48-purify"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Purify."

        return f"{number}. {name}: " + desc
        

    def Pyrokinesis():
    
        DataSet = {
            "number": "49",
            "name": "Pyrokinesis",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Pyrokinesis ",
            "link": "#49-pyrokinesis"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Pyrokinesis."

        return f"{number}. {name}: " + desc
        

    def RepulsionFieldGeneration():
    
        DataSet = {
            "number": "50",
            "name": "Repulsion Field Generation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Repulsion Field Generation ",
            "link": "#50-repulsion-field-generation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Repulsion Field Generation."

        return f"{number}. {name}: " + desc
        

    def Restoration():
    
        DataSet = {
            "number": "51",
            "name": "Restoration",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Restoration ",
            "link": "#51-restoration"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Restoration."

        return f"{number}. {name}: " + desc
        

    def SensoryDeprivation():
    
        DataSet = {
            "number": "52",
            "name": "Sensory Deprivation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Sensory Deprivation ",
            "link": "#52-sensory-deprivation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Sensory Deprivation."

        return f"{number}. {name}: " + desc
        

    def SociabilityFieldGeneration():
    
        DataSet = {
            "number": "53",
            "name": "Sociability Field Generation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Sociability Field Generation ",
            "link": "#53-sociability-field-generation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Sociability Field Generation."

        return f"{number}. {name}: " + desc
        

    def Sonar():
    
        DataSet = {
            "number": "54",
            "name": "Sonar",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Sonar ",
            "link": "#54-sonar"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Sonar."

        return f"{number}. {name}: " + desc
        

    def SonicAttack():
    
        DataSet = {
            "number": "55",
            "name": "Sonic Attack",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Sonic Attack ",
            "link": "#55-sonic-attack"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Sonic Attack."

        return f"{number}. {name}: " + desc
        

    def SonicReproduction():
    
        DataSet = {
            "number": "56",
            "name": "Sonic Reproduction",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Sonic Reproduction ",
            "link": "#56-sonic-reproduction"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Sonic Reproduction."

        return f"{number}. {name}: " + desc
        

    def Suggestion():
    
        DataSet = {
            "number": "57",
            "name": "Suggestion",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Suggestion ",
            "link": "#57-suggestion"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Suggestion."

        return f"{number}. {name}: " + desc
        

    def Telekinesis():
    
        DataSet = {
            "number": "58",
            "name": "Telekinesis",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Telekinesis ",
            "link": "#58-telekinesis"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Telekinesis."

        return f"{number}. {name}: " + desc
        

    def TelekineticArm():
    
        DataSet = {
            "number": "59",
            "name": "Telekinetic Arm",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Telekinetic Arm ",
            "link": "#59-telekinetic-arm"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Telekinetic Arm."

        return f"{number}. {name}: " + desc
        

    def TelekineticFlight():
    
        DataSet = {
            "number": "60",
            "name": "Telekinetic Flight",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Telekinetic Flight ",
            "link": "#60-telekinetic-flight"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Telekinetic Flight."

        return f"{number}. {name}: " + desc
        

    def Telempathy():
    
        DataSet = {
            "number": "61",
            "name": "Telempathy",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Telempathy ",
            "link": "#61-telempathy"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Telempathy."

        return f"{number}. {name}: " + desc
        

    def Teleport():
    
        DataSet = {
            "number": "62",
            "name": "Teleport",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Teleport ",
            "link": "#62-teleport"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Teleport."

        return f"{number}. {name}: " + desc
        

    def ThoughtImitation():
    
        DataSet = {
            "number": "63",
            "name": "Thought Imitation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Thought Imitation ",
            "link": "#63-thought-imitation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Thought Imitation."

        return f"{number}. {name}: " + desc
        

    def TimeStop():
    
        DataSet = {
            "number": "64",
            "name": "Time Stop",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Time Stop ",
            "link": "#64-time-stop"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Time Stop."

        return f"{number}. {name}: " + desc
        

    def TimeTell():
    
        DataSet = {
            "number": "65",
            "name": "Time Tell",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Time Tell ",
            "link": "#65-time-tell"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Time Tell."

        return f"{number}. {name}: " + desc
        

    def TotalRecuperation():
    
        DataSet = {
            "number": "66",
            "name": "Total Recuperation",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Total Recuperation ",
            "link": "#66-total-recuperation"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Total Recuperation."

        return f"{number}. {name}: " + desc
        

    def Ventriloquism():
    
        DataSet = {
            "number": "67",
            "name": "Ventriloquism",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Ventriloquism ",
            "link": "#67-ventriloquism"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Ventriloquism."

        return f"{number}. {name}: " + desc
        

    def WeaponsDischarging():
    
        DataSet = {
            "number": "68",
            "name": "Weapons Discharging",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Weapons Discharging ",
            "link": "#68-weapons-discharging"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Weapons Discharging."

        return f"{number}. {name}: " + desc
        

    def WeatherTell():
    
        DataSet = {
            "number": "69",
            "name": "Weather Tell",
            "type": "combat",           
            "CR": "0",
            "desc": "Mutant is blessed with Weather Tell ",
            "link": "#69-weather-tell"}

        # collect variables
        number = DataSet["number"]
        name = DataSet["name"]
        desc = DataSet["desc"]

        # calculate effects

        # build decription for comment
        desc = desc + "\n    Say more about Weather Tell."

        return f"{number}. {name}: " + desc
        
